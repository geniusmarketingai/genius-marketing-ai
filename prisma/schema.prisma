generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserProfile {
  id             String   @id @default(uuid())
  userId         String   @unique @map("user_id")
  email          String   @unique
  name           String?
  businessType   String?  @map("business_type")
  targetPersona  String?  @map("target_persona")
  channels       String[]
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_profile")
}

model Content {
  id          String      @id @default(uuid())
  userId      String      @map("user_id")
  type        ContentType
  title       String?
  body        String
  tone        String?
  objective   String?
  status      String
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("content_history")
}

model Credit {
  id         String   @id @default(uuid())
  userId     String   @map("user_id")
  amount     Int
  source     String?
  createdAt  DateTime @default(now()) @map("created_at")
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("credits")
}

enum ContentType {
  INSTAGRAM_POST
  BLOG_ARTICLE
  FACEBOOK_AD
  EMAIL_COPY
  CTA_COPY
}

model User {
  id        String       @id @default(uuid()) 
  email     String       @unique
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @updatedAt @map("updated_at")
  profile   UserProfile?
  contents  Content[]
  credits   Credit[]

  @@map("users")
} 